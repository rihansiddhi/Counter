{"ast":null,"code":"import _classCallCheck from \"/home/rently/reactApp/counter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rently/reactApp/counter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/rently/reactApp/counter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/rently/reactApp/counter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/rently/reactApp/counter/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/rently/reactApp/counter/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/rently/reactApp/counter/src/components/counter.jsx\";\nimport React, { Component } from \"react\";\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Counter).call(this));\n    _this.state = {\n      count: 0,\n      tags: []\n    };\n    console.log(\"Constructor\", _assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"handleIncrement\",\n    value: function handleIncrement() {\n      console.log(\"Increment Clicked!\");\n    }\n  }, {\n    key: \"renderTags\",\n    value: function renderTags() {\n      if (this.state.tags.length === 0) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"There are no tags!\");\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, this.state.tags.map(function (tag) {\n        return React.createElement(\"li\", {\n          key: tag,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, tag);\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, this.state.tags.length === 0 && \"Please create a new tag!\", this.renderTags(), React.createElement(\"span\", {\n        className: this.getBadgeClasses(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.formatCount()), React.createElement(\"button\", {\n        onClick: this.handleIncrement,\n        className: \"btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Increment\"));\n    }\n  }, {\n    key: \"getBadgeClasses\",\n    value: function getBadgeClasses() {\n      var classes = \"badge m-2 badge-\";\n      classes += this.state.count == 0 ? \"warning\" : \"primary\";\n      return classes;\n    }\n  }, {\n    key: \"formatCount\",\n    value: function formatCount() {\n      var count = this.state.count;\n      return count === 0 ? \"Zero\" : count;\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nexport default Counter; //   styles = {\n//     fontSize: 10,\n//     fontWeight: \"bold\"\n//   };","map":{"version":3,"sources":["/home/rently/reactApp/counter/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","tags","console","log","length","map","tag","renderTags","getBadgeClasses","formatCount","handleIncrement","classes"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,O;;;;;AAMJ,qBAAc;AAAA;;AAAA;;AACZ;AADY,UALdC,KAKc,GALN;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,IAAI,EAAE;AAFA,KAKM;AAEZC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAFY;AAGb;;;;sCAEiB;AAChBD,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD;;;iCAEY;AACX,UAAI,KAAKJ,KAAL,CAAWE,IAAX,CAAgBG,MAAhB,KAA2B,CAA/B,EAAkC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AAClC,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKL,KAAL,CAAWE,IAAX,CAAgBI,GAAhB,CAAoB,UAAAC,GAAG;AAAA,eACtB;AAAI,UAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAeA,GAAf,CADsB;AAAA,OAAvB,CADH,CADF;AAOD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKP,KAAL,CAAWE,IAAX,CAAgBG,MAAhB,KAA2B,CAA3B,IAAgC,0BADnC,EAEG,KAAKG,UAAL,EAFH,EAGE;AAAM,QAAA,SAAS,EAAE,KAAKC,eAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0C,KAAKC,WAAL,EAA1C,CAHF,EAIE;AACE,QAAA,OAAO,EAAE,KAAKC,eADhB;AAEE,QAAA,SAAS,EAAC,0BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,CADF;AAaD;;;sCAEiB;AAChB,UAAIC,OAAO,GAAG,kBAAd;AACAA,MAAAA,OAAO,IAAI,KAAKZ,KAAL,CAAWC,KAAX,IAAoB,CAApB,GAAwB,SAAxB,GAAoC,SAA/C;AACA,aAAOW,OAAP;AACD;;;kCAEa;AAAA,UACJX,KADI,GACM,KAAKD,KADX,CACJC,KADI;AAEZ,aAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;;;EAnDmBH,S;;AAsDtB,eAAeC,OAAf,C,CAEA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\n\nclass Counter extends Component {\n  state = {\n    count: 0,\n    tags: []\n  };\n\n  constructor() {\n    super();\n    console.log(\"Constructor\", this);\n  }\n\n  handleIncrement() {\n    console.log(\"Increment Clicked!\");\n  }\n\n  renderTags() {\n    if (this.state.tags.length === 0) return <p>There are no tags!</p>;\n    return (\n      <ul>\n        {this.state.tags.map(tag => (\n          <li key={tag}>{tag}</li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.tags.length === 0 && \"Please create a new tag!\"}\n        {this.renderTags()}\n        <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n        <button\n          onClick={this.handleIncrement}\n          className=\"btn btn-secondary btn-sm\"\n        >\n          Increment\n        </button>\n      </div>\n    );\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count == 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const { count } = this.state;\n    return count === 0 ? \"Zero\" : count;\n  }\n}\n\nexport default Counter;\n\n//   styles = {\n//     fontSize: 10,\n//     fontWeight: \"bold\"\n//   };\n"]},"metadata":{},"sourceType":"module"}