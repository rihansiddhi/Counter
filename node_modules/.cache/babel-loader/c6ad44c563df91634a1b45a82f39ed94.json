{"ast":null,"code":"import _classCallCheck from \"/home/rently/reactApp/counter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rently/reactApp/counter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/rently/reactApp/counter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/rently/reactApp/counter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/rently/reactApp/counter/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/rently/reactApp/counter/src/components/counter.jsx\";\nimport React, { Component } from \"react\";\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      count: _this.props.value,\n      tags: [\"Shop More!\"]\n    };\n\n    _this.handleIncrement = function (product) {\n      _this.setState({\n        count: _this.state.count + 1\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"renderTags\",\n    //Rendering lists\n    value: function renderTags() {\n      if (this.state.tags.length === 0) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"There are no tags!\");\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, this.state.tags.map(function (tag) {\n        return React.createElement(\"li\", {\n          key: tag,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, tag);\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, this.props.children, \";\", React.createElement(\"span\", {\n        className: this.getBadgeClasses(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, this.formatCount()), React.createElement(\"button\", {\n        onClick: function onClick() {\n          _this2.handleIncrement({\n            product: 1\n          });\n        },\n        className: \"btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Increment\"));\n    }\n  }, {\n    key: \"getBadgeClasses\",\n    value: function getBadgeClasses() {\n      var classes = \"badge m-2 badge-\";\n      classes += this.state.count === 0 ? \"warning\" : \"primary\";\n      return classes;\n    }\n  }, {\n    key: \"formatCount\",\n    value: function formatCount() {\n      var count = this.state.count;\n      return count === 0 ? \"Zero\" : count;\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nexport default Counter; //   styles = {\n//     fontSize: 10,\n//     fontWeight: \"bold\"\n//   };\n//   constructor() {\n//     super();\n//     this.handleIncrement = this.handleIncrement.bind(this);\n//   }\n//   doHandleIncrement = () => {\n//     this.handleIncrement({ id: 1 });\n//   };","map":{"version":3,"sources":["/home/rently/reactApp/counter/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","props","value","tags","handleIncrement","product","setState","length","map","tag","children","getBadgeClasses","formatCount","classes"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,O;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,MAAKC,KAAL,CAAWC,KADZ;AAENC,MAAAA,IAAI,EAAE,CAAC,YAAD;AAFA,K;;UAKRC,e,GAAkB,UAAAC,OAAO,EAAI;AAC3B,YAAKC,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAE,MAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;AACD,K;;;;;;;AACD;iCACa;AACX,UAAI,KAAKD,KAAL,CAAWI,IAAX,CAAgBI,MAAhB,KAA2B,CAA/B,EAAkC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AAClC,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKR,KAAL,CAAWI,IAAX,CAAgBK,GAAhB,CAAoB,UAAAC,GAAG;AAAA,eACtB;AAAI,UAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAeA,GAAf,CADsB;AAAA,OAAvB,CADH,CADF;AAOD;;;6BAEQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKR,KAAL,CAAWS,QADd,OAKE;AAAM,QAAA,SAAS,EAAE,KAAKC,eAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0C,KAAKC,WAAL,EAA1C,CALF,EAME;AACE,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,MAAI,CAACR,eAAL,CAAqB;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAArB;AACD,SAHH;AAIE,QAAA,SAAS,EAAC,0BAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANF,CADF;AAiBD;;;sCAEiB;AAChB,UAAIQ,OAAO,GAAG,kBAAd;AACAA,MAAAA,OAAO,IAAI,KAAKd,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD;AACA,aAAOa,OAAP;AACD;;;kCAEa;AAAA,UACJb,KADI,GACM,KAAKD,KADX,CACJC,KADI;AAEZ,aAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;;;EAlDmBH,S;;AAqDtB,eAAeC,OAAf,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\n\nclass Counter extends Component {\n  state = {\n    count: this.props.value,\n    tags: [\"Shop More!\"]\n  };\n  //handle events && updating states\n  handleIncrement = product => {\n    this.setState({ count: this.state.count + 1 });\n  };\n  //Rendering lists\n  renderTags() {\n    if (this.state.tags.length === 0) return <p>There are no tags!</p>;\n    return (\n      <ul>\n        {this.state.tags.map(tag => (\n          <li key={tag}>{tag}</li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.children};\n        {/*Conditional Rendering\n        {this.state.tags.length === 0 && \"Please create a new tag!\"}\n        {this.renderTags()}*/}\n        <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n        <button\n          onClick={() => {\n            this.handleIncrement({ product: 1 });\n          }}\n          className=\"btn btn-secondary btn-sm\"\n        >\n          Increment\n        </button>\n      </div>\n    );\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const { count } = this.state;\n    return count === 0 ? \"Zero\" : count;\n  }\n}\n\nexport default Counter;\n\n//   styles = {\n//     fontSize: 10,\n//     fontWeight: \"bold\"\n//   };\n\n//   constructor() {\n//     super();\n//     this.handleIncrement = this.handleIncrement.bind(this);\n//   }\n\n//   doHandleIncrement = () => {\n//     this.handleIncrement({ id: 1 });\n//   };\n"]},"metadata":{},"sourceType":"module"}