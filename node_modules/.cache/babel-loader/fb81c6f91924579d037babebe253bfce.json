{"ast":null,"code":"import _classCallCheck from \"/home/rently/reactApp/counter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rently/reactApp/counter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/rently/reactApp/counter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/rently/reactApp/counter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/rently/reactApp/counter/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/rently/reactApp/counter/src/components/counter.jsx\";\nimport React, { Component } from \"react\";\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    _classCallCheck(this, Counter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Counter).apply(this, arguments));\n  }\n\n  _createClass(Counter, [{\n    key: \"renderTags\",\n    //handle events && updating states\n    //Rendering lists\n    value: function renderTags() {\n      if (this.state.tags.length === 0) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, \"There are no tags!\");\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, this.state.tags.map(function (tag) {\n        return React.createElement(\"li\", {\n          key: tag,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, tag);\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, this.props.children, React.createElement(\"span\", {\n        className: this.getBadgeClasses(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, this.formatCount()), React.createElement(\"button\", {\n        onClick: function onClick() {\n          _this.props.onIncrement(_this.props.counter);\n        },\n        className: \"btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Increment\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this.props.onDelete(_this.props.counter.id);\n        },\n        className: \"btn btn-danger btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Delete\"));\n    }\n  }, {\n    key: \"getBadgeClasses\",\n    value: function getBadgeClasses() {\n      var classes = \"badge m-2 badge-\";\n      classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\n      return classes;\n    }\n  }, {\n    key: \"formatCount\",\n    value: function formatCount() {\n      var count = this.props.counter.count;\n      return count === 0 ? \"Zero\" : count;\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nexport default Counter; //   styles = {\n//     fontSize: 10,\n//     fontWeight: \"bold\"\n//   };\n//   constructor() {\n//     super();\n//     this.handleIncrement = this.handleIncrement.bind(this);\n//   }\n//   doHandleIncrement = () => {\n//     this.handleIncrement({ id: 1 });\n//   };\n//   state = {\n//     count: this.props.counter.value,\n//     tags: [\"Shop More!\"]\n//   };\n// handleIncrement = product => {\n//     this.setState({ count: this.state.count + 1 });\n// };","map":{"version":3,"sources":["/home/rently/reactApp/counter/src/components/counter.jsx"],"names":["React","Component","Counter","state","tags","length","map","tag","props","children","getBadgeClasses","formatCount","onIncrement","counter","onDelete","id","classes","value","count"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,O;;;;;;;;;;;;;AACJ;AAEA;iCACa;AACX,UAAI,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,MAAhB,KAA2B,CAA/B,EAAkC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AAClC,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,KAAL,CAAWC,IAAX,CAAgBE,GAAhB,CAAoB,UAAAC,GAAG;AAAA,eACtB;AAAI,UAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAeA,GAAf,CADsB;AAAA,OAAvB,CADH,CADF;AAOD;;;6BAEQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,KAAL,CAAWC,QADd,EAKE;AAAM,QAAA,SAAS,EAAE,KAAKC,eAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0C,KAAKC,WAAL,EAA1C,CALF,EAME;AACE,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,KAAI,CAACH,KAAL,CAAWI,WAAX,CAAuB,KAAI,CAACJ,KAAL,CAAWK,OAAlC;AACD,SAHH;AAIE,QAAA,SAAS,EAAC,0BAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANF,EAcE;AACE,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACL,KAAL,CAAWM,QAAX,CAAoB,KAAI,CAACN,KAAL,CAAWK,OAAX,CAAmBE,EAAvC,CAAN;AAAA,SADX;AAEE,QAAA,SAAS,EAAC,uBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF,CADF;AAuBD;;;sCAEiB;AAChB,UAAIC,OAAO,GAAG,kBAAd;AACAA,MAAAA,OAAO,IAAI,KAAKR,KAAL,CAAWK,OAAX,CAAmBI,KAAnB,KAA6B,CAA7B,GAAiC,SAAjC,GAA6C,SAAxD;AACA,aAAOD,OAAP;AACD;;;kCAEa;AAAA,UACJE,KADI,GACM,KAAKV,KAAL,CAAWK,OADjB,CACJK,KADI;AAEZ,aAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;;;EAlDmBjB,S;;AAqDtB,eAAeC,OAAf,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\n\nclass Counter extends Component {\n  //handle events && updating states\n\n  //Rendering lists\n  renderTags() {\n    if (this.state.tags.length === 0) return <p>There are no tags!</p>;\n    return (\n      <ul>\n        {this.state.tags.map(tag => (\n          <li key={tag}>{tag}</li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.children}\n        {/*Conditional Rendering\n        {this.state.tags.length === 0 && \"Please create a new tag!\"}\n    {this.renderTags()}*/}\n        <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n        <button\n          onClick={() => {\n            this.props.onIncrement(this.props.counter);\n          }}\n          className=\"btn btn-secondary btn-sm\"\n        >\n          Increment\n        </button>\n        <button\n          onClick={() => this.props.onDelete(this.props.counter.id)}\n          className=\"btn btn-danger btn-sm\"\n        >\n          Delete\n        </button>\n      </div>\n    );\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const { count } = this.props.counter;\n    return count === 0 ? \"Zero\" : count;\n  }\n}\n\nexport default Counter;\n\n//   styles = {\n//     fontSize: 10,\n//     fontWeight: \"bold\"\n//   };\n\n//   constructor() {\n//     super();\n//     this.handleIncrement = this.handleIncrement.bind(this);\n//   }\n\n//   doHandleIncrement = () => {\n//     this.handleIncrement({ id: 1 });\n//   };\n\n//   state = {\n//     count: this.props.counter.value,\n//     tags: [\"Shop More!\"]\n//   };\n// handleIncrement = product => {\n//     this.setState({ count: this.state.count + 1 });\n// };\n"]},"metadata":{},"sourceType":"module"}